<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:icon="http://metro.mahapps.com/winfx/xaml/iconpacks">
    <SolidColorBrush x:Key="MainColor" Color="#3D474E"/>
    <SolidColorBrush x:Key="SecondColor" Color="#6ca434"/>
    <SolidColorBrush x:Key="ThirdColor" Color="#353d42"/>
    <SolidColorBrush x:Key="ForegroundColor" Color="#c1b6ac"/>
    <SolidColorBrush x:Key="SecondForegroundColor" Color="#0d0b15"/>
    <SolidColorBrush x:Key="FifthColor" Color="Black"/>
    <SolidColorBrush x:Key="FourthColor" Color="#535657"/>
    <SolidColorBrush x:Key="UnCheckedColorBrush" Color="#faf9f9" />
    <SolidColorBrush x:Key="CheckedColorBrush" Color="#0d0b15" />

    <!--togglebutton-->
    <Style x:Key="ToggleSwitchStyle" TargetType="ToggleButton">
        <Setter Property="Foreground" Value="{StaticResource UnCheckedColorBrush}" />
        <Setter Property="Background" Value="#D4D4D4" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid Width="48" Height="24">
                        <Border x:Name="BackgroundBorder" Background="{TemplateBinding Background}" BorderBrush="#D4D4D4" BorderThickness="0.8" CornerRadius="12">
                            <Canvas>
                                <Ellipse x:Name="ToggleIndicator" Fill="{TemplateBinding Foreground}" Width="19.2" Height="19.2" Canvas.Left="1.6" Canvas.Top="1.6">
                                    <Ellipse.Effect>
                                        <DropShadowEffect BlurRadius="4" ShadowDepth="1.6" Opacity="0.3" />
                                    </Ellipse.Effect>
                                </Ellipse>
                            </Canvas>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="Checked">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="ToggleIndicator" Storyboard.TargetProperty="(Canvas.Left)"
                                                 To="27.2" Duration="0:0:0.2" />
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ToggleIndicator" Storyboard.TargetProperty="Fill">
                                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{StaticResource CheckedColorBrush}" />
                                    </ObjectAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="Unchecked">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="ToggleIndicator" Storyboard.TargetProperty="(Canvas.Left)"
                                                 To="1.6" Duration="0:0:0.2" />
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ToggleIndicator" Storyboard.TargetProperty="Fill">
                                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{StaticResource UnCheckedColorBrush}" />
                                    </ObjectAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="BackgroundBorder" Property="Background" Value="#BDBDBD" />
                            <Setter TargetName="ToggleIndicator" Property="Fill" Value="#BDBDBD" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="BackGroundGrid" TargetType="{x:Type Grid}">
        <Setter Property="Background" Value="{StaticResource MainColor}"/>
    </Style>

    <Style x:Key="TabItemBorder" TargetType="TabItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Border>
                        <Grid>
                            <Grid>
                                <Border x:Name="border"/>
                            </Grid>
                            <ContentPresenter ContentSource="Header"
                                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected"
                                     Value="True">
                            <Setter TargetName="border"
                                        Property="BorderBrush"
                                        Value="{StaticResource SecondColor}" />
                            <Setter TargetName="border"
                                        Property="BorderThickness" Value="0 1 1 0" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="NavigationButton" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontFamily" Value="Themes/Fonts/AnaheimRegular.ttf"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Foreground" Value="{StaticResource ForegroundColor}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{StaticResource ThirdColor}" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Background" Value="{StaticResource ThirdColor}"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="False">
                            <Setter Property="Background" Value="Transparent"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource ThirdColor}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="InputTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0 0 0 0.7"/>
        <Setter Property="BorderBrush" Value="{StaticResource FifthColor}"/>
        <Setter Property="FontFamily" Value="Themes/Fonts/AnaheimRegular.ttf"/>
        <Setter Property="FontSize" Value="14"/>
    </Style>

    <Style x:Key="BorderCard" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="{StaticResource ThirdColor}" />
        <Setter Property="CornerRadius" Value="20"/>
        <Setter Property="BorderBrush" Value="{StaticResource ThirdColor}"/>
        <Setter Property="BorderThickness" Value="1.5"/>
    </Style>

    <Style x:Key="BorderCardConvert" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="{StaticResource MainColor}" />
        <Setter Property="CornerRadius" Value="20"/>
        <Setter Property="BorderBrush" Value="{StaticResource ThirdColor}"/>
        <Setter Property="BorderThickness" Value="1.5"/>
    </Style>

    <Style x:Key="LabelStyle" TargetType="{x:Type Label}">
        <Setter Property="Foreground" Value="{StaticResource ForegroundColor}"/>
        <Setter Property="FontFamily" Value="Themes/Fonts/AnaheimRegular.ttf"/>
        <Setter Property="FontSize" Value="14"/>
    </Style>
    <Style x:Key="LabelAbout" TargetType="{x:Type Label}">
        <Setter Property="Foreground" Value="{StaticResource ForegroundColor}"/>
        <Setter Property="FontFamily" Value="Themes/Fonts/AnaheimRegular.ttf #Anaheim"/>
        <Setter Property="FontSize" Value="14"/>
    </Style>

    <Style x:Key="NavBorder" TargetType="Border">
        <Setter Property="BorderBrush" Value="{StaticResource ThirdColor}"/>
        <Setter Property="Background" Value="{StaticResource MainColor}"/>
        <Setter Property="BorderThickness" Value="0 0 1 0"/>
    </Style>

    <Style x:Key="ScrollBorder" TargetType="Border">
        <Setter Property="BorderBrush" Value="{StaticResource SecondColor}"/>
    </Style>


    <Style x:Key="textBlockStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="Themes/Fonts/AnaheimRegular.ttf"/>
        <Setter Property="Foreground" Value="{StaticResource ForegroundColor}"/>
        <Setter Property="FontSize" Value="14"/>
    </Style>
    <Style x:Key="SecondTextBlock" TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="Themes/Fonts/AnaheimRegular.ttf"/>
        <Setter Property="Foreground" Value="{StaticResource SecondForegroundColor}"/>
        <Setter Property="FontSize" Value="14"/>
    </Style>

    <Style x:Key="SearchButton" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}">
                        <StackPanel Orientation="Horizontal">
                            <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center" />
                            <ContentPresenter Margin="15,0,0,0"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center">
                                <ContentPresenter.Content>
                                    <icon:Codicons Kind="Search"/>
                                </ContentPresenter.Content>
                            </ContentPresenter>
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{x:Static SystemColors.ControlLightBrush}" />
                            <Setter Property="Foreground" Value="{x:Static SystemColors.GrayTextBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ConvertButton" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}">
                        <StackPanel Orientation="Horizontal">
                            <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center" />
                            <ContentPresenter Margin="15,0,0,0"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center">
                                <ContentPresenter.Content>
                                    <icon:Codicons Kind="ArrowSwap"/>
                                </ContentPresenter.Content>
                            </ContentPresenter>
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{x:Static SystemColors.ControlLightBrush}" />
                            <Setter Property="Foreground" Value="{x:Static SystemColors.GrayTextBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonDetail" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}">
                        <StackPanel Orientation="Horizontal">
                            <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center" />
                            <ContentPresenter Margin="5,0,0,0"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center">
                                <ContentPresenter.Content>
                                    <icon:Codicons Kind="ArrowRight"/>
                                </ContentPresenter.Content>
                            </ContentPresenter>
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Background" Value="{StaticResource ThirdColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <SolidColorBrush x:Key="ComboBoxNormalBorderBrush" Color="#e3e9ef" />
    <SolidColorBrush x:Key="ComboBoxNormalBackgroundBrush" Color="#fff" />
    <SolidColorBrush x:Key="ComboBoxDisabledForegroundBrush" Color="#888" />
    <SolidColorBrush x:Key="ComboBoxDisabledBackgroundBrush" Color="#eee" />
    <SolidColorBrush x:Key="ComboBoxDisabledBorderBrush" Color="#888" />
    <!--combobox-->
    <ControlTemplate TargetType="ToggleButton" x:Key="ComboBoxToggleButtonTemplate">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>
            <Border Grid.ColumnSpan="2" Name="Border"
              BorderBrush="{StaticResource ComboBoxNormalBorderBrush}" 
              CornerRadius="0" BorderThickness="1, 1, 1, 1" 
              Background="{StaticResource ComboBoxNormalBackgroundBrush}" />
            <Border Grid.Column="1" Margin="1, 1, 1, 1" BorderBrush="#444" Name="ButtonBorder"
              CornerRadius="0, 0, 0, 0" BorderThickness="0, 0, 0, 0" 
              Background="{StaticResource ComboBoxNormalBackgroundBrush}" />

            <Path Name="Arrow" Grid.Column="1" 
            Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
            HorizontalAlignment="Center" Fill="#444"
            VerticalAlignment="Center" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
                <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="WhiteSmoke"/>
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
                <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="WhiteSmoke"/>
                <Setter Property="Shape.Fill" TargetName="Arrow" Value="#FF8D979E"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
                <Setter Property="Panel.Background" TargetName="Border" Value="{StaticResource ComboBoxDisabledBackgroundBrush}"/>
                <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="{StaticResource ComboBoxDisabledBackgroundBrush}"/>
                <Setter Property="Border.BorderBrush" TargetName="ButtonBorder" Value="{StaticResource ComboBoxDisabledBorderBrush}"/>
                <Setter Property="TextElement.Foreground" Value="{StaticResource ComboBoxDisabledForegroundBrush}"/>
                <Setter Property="Shape.Fill" TargetName="Arrow" Value="#999"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="ComboBoxFlatStyle"  TargetType="{x:Type ComboBox}">
        <Setter Property="UIElement.SnapsToDevicePixels" Value="True"/>
        <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
        <Setter Property="TextElement.Foreground" Value="Black"/>
        <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton Name="ToggleButton" Grid.Column="2"
                ClickMode="Press" Focusable="False"
                IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                Template="{StaticResource ComboBoxToggleButtonTemplate}"/>

                        <ContentPresenter Name="ContentSite" Margin="5, 3, 23, 3" IsHitTestVisible="False"
                              HorizontalAlignment="Left" VerticalAlignment="Center"                              
                              Content="{TemplateBinding ComboBox.SelectionBoxItem}" 
                              ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"/>
                        <TextBox Name="PART_EditableTextBox" Margin="3, 3, 23, 3"                     
                     IsReadOnly="{TemplateBinding IsReadOnly}"
                     Visibility="Hidden" Background="Transparent"
                     HorizontalAlignment="Left" VerticalAlignment="Center"
                     Focusable="True" >
                            <TextBox.Template>
                                <ControlTemplate TargetType="TextBox" >
                                    <Border Name="PART_ContentHost" Focusable="False" />
                                </ControlTemplate>
                            </TextBox.Template>
                        </TextBox>
                        <!-- Popup showing items -->
                        <Popup Name="Popup" Placement="Bottom"
                   Focusable="False" AllowsTransparency="True"
                   IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}"
                   PopupAnimation="Slide">
                            <Grid Name="DropDown" SnapsToDevicePixels="True"
                    MinWidth="{TemplateBinding FrameworkElement.ActualWidth}"
                    MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}">
                                <Border Name="DropDownBorder" Background="White" Margin="0, 1, 0, 0"
                        CornerRadius="0" BorderThickness="1,1,1,1" 
                        BorderBrush="{StaticResource ComboBoxNormalBorderBrush}"/>
                                <ScrollViewer Margin="4" SnapsToDevicePixels="True">
                                    <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ItemsControl.HasItems" Value="False">
                            <Setter Property="FrameworkElement.MinHeight" TargetName="DropDownBorder" Value="95"/>
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" Value="{StaticResource ComboBoxDisabledForegroundBrush}"/>
                        </Trigger>
                        <Trigger Property="ItemsControl.IsGrouping" Value="True">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                        </Trigger>
                        <Trigger Property="ComboBox.IsEditable" Value="True">
                            <Setter Property="KeyboardNavigation.IsTabStop" Value="False"/>
                            <Setter Property="UIElement.Visibility" TargetName="PART_EditableTextBox" Value="Visible"/>
                            <Setter Property="UIElement.Visibility" TargetName="ContentSite" Value="Hidden"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


</ResourceDictionary>